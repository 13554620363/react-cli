{"ast":null,"code":"import _objectSpread from \"/Users/hucong/Desktop/workspace/creat-app/my/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _objectWithoutProperties from \"/Users/hucong/Desktop/workspace/creat-app/my/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport fetchJsonp from 'fetch-jsonp';\nimport _ from 'lodash';\nimport 'babel-polyfill';\nimport { overTime } from './utils.js';\nwindow.__disableNativeFetch = true;\n\nvar fetch = require('fetch-ie8');\n\nvar beforeGlobalResponse = null;\nvar onGlobalComplete = null;\nvar onGlobalErrorHandler = null;\n\nvar Data = function Data(_ref) {\n  var url = _ref.url,\n      _ref$method = _ref.method,\n      method = _ref$method === void 0 ? 'get' : _ref$method,\n      _ref$headers = _ref.headers,\n      headers = _ref$headers === void 0 ? {} : _ref$headers,\n      options = _objectWithoutProperties(_ref, [\"url\", \"method\", \"headers\"]);\n\n  if (!url) {\n    throw new Error(\"Property 'url' should not be empty!\");\n  } // if (url.indexOf('/') != 0 && url.indexOf('http') != 0) {\n  // }\n\n\n  if (method === 'jsonp') {\n    return fetchJsonp(url, options);\n  }\n\n  var isFormData = options.isFormData;\n  var originHeaders = {\n    'Content-Type': 'application/json;charset=utf-8'\n  };\n  var headersNew = !isFormData ? originHeaders : isFormData;\n  return fetch(url, _objectSpread({\n    method: method,\n    headers: _objectSpread({}, headersNew, headers)\n  }, options)).then(function (response) {\n    return response.json();\n  }).then(function (res) {\n    overTime(res);\n    var newResult = beforeGlobalResponse && beforeGlobalResponse(res);\n    return newResult || res;\n  }).catch(function (err) {\n    console.error(err);\n    return Promise.resolve();\n  });\n}; // 数据请求，全局配置\n\n\nData.setting = function (_ref2) {\n  var beforeResponse = _ref2.beforeResponse,\n      onComplete = _ref2.onComplete,\n      onErrorResponse = _ref2.onErrorResponse;\n\n  if (beforeResponse && beforeResponse.apply) {\n    beforeGlobalResponse = beforeResponse;\n  }\n\n  if (onComplete && onComplete.apply) {\n    onGlobalComplete = onComplete;\n  }\n\n  if (onErrorResponse && onErrorResponse.apply) {\n    onGlobalErrorHandler = onErrorResponse;\n  }\n}; // get 请求\n\n\nData.get = function (_ref3) {\n  var method = _ref3.method,\n      body = _ref3.body,\n      options = _objectWithoutProperties(_ref3, [\"method\", \"body\"]);\n\n  // 把body的参数拼接到url中，并把body参数去掉\n  if (_.isPlainObject(body)) {\n    var url = options.url;\n\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    }\n\n    for (var key in body) {\n      url += \"\".concat(key, \"=\").concat(body[key], \"&\");\n    }\n\n    options.url = url.substring(0, url.length - 1);\n  }\n\n  return Data(_objectSpread({\n    method: 'get'\n  }, options));\n}; // post 请求\n\n\nData.post = function (_ref4) {\n  var method = _ref4.method,\n      params = _ref4.params,\n      body = _ref4.body,\n      options = _objectWithoutProperties(_ref4, [\"method\", \"params\", \"body\"]);\n\n  if (_.isPlainObject(params)) {\n    params = JSON.stringify(params);\n  }\n\n  if (body || params) {\n    options.body = body || params;\n  }\n\n  return Data(_objectSpread({\n    method: 'post'\n  }, options));\n}; // put 请求\n\n\nData.put = function (_ref5) {\n  var method = _ref5.method,\n      options = _objectWithoutProperties(_ref5, [\"method\"]);\n\n  return Data(_objectSpread({\n    method: 'put'\n  }, options));\n}; // delete 请求\n\n\nData.delete = function (_ref6) {\n  var method = _ref6.method,\n      options = _objectWithoutProperties(_ref6, [\"method\"]);\n\n  return Data(_objectSpread({\n    method: 'delete'\n  }, options));\n};\n\nData.jsonp = function (options) {\n  var headers = {};\n  var params = {\n    method: 'GET',\n    headers: _objectSpread({}, headers)\n  };\n  var getQuery = '?';\n  var getUrl = '';\n\n  if (options.query) {\n    for (var name in options.query) {\n      getQuery = \"\".concat(getQuery).concat(name, \"=\").concat(options.query[name], \"&\");\n    }\n  }\n\n  getUrl = options.url + (options.query ? getQuery.substring(0, getQuery.length - 1) : '');\n  return fetchJSON(getUrl, params);\n};\n\nfunction fetchJSON(url, params) {\n  params = _objectSpread({}, params);\n  return fetchJsonp(url, params);\n}\n\nmodule.exports = Data;","map":{"version":3,"sources":["/Users/hucong/Desktop/workspace/creat-app/my/src/client/data/index.js"],"names":["fetchJsonp","_","overTime","window","__disableNativeFetch","fetch","require","beforeGlobalResponse","onGlobalComplete","onGlobalErrorHandler","Data","url","method","headers","options","Error","isFormData","originHeaders","headersNew","then","response","json","res","newResult","catch","err","console","error","Promise","resolve","setting","beforeResponse","onComplete","onErrorResponse","apply","get","body","isPlainObject","indexOf","key","substring","length","post","params","JSON","stringify","put","delete","jsonp","getQuery","getUrl","query","name","fetchJSON","module","exports"],"mappings":"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","sourcesContent":["import fetchJsonp from 'fetch-jsonp';\nimport _ from 'lodash';\nimport 'babel-polyfill';\nimport { overTime } from './utils.js';\n\nwindow.__disableNativeFetch = true;\n\nconst fetch = require('fetch-ie8');\n\nlet beforeGlobalResponse = null;\nlet onGlobalComplete = null;\nlet onGlobalErrorHandler = null;\n\nconst Data = ({ url, method = 'get', headers = {}, ...options }) => {\n  if (!url) {\n    throw new Error(\"Property 'url' should not be empty!\");\n  }\n\n  // if (url.indexOf('/') != 0 && url.indexOf('http') != 0) {\n  // }\n\n  if (method === 'jsonp') {\n    return fetchJsonp(url, options);\n  }\n  const isFormData = options.isFormData;\n  const originHeaders = {\n      'Content-Type': 'application/json;charset=utf-8',\n  };\n  const headersNew = !isFormData ? originHeaders : isFormData;\n  return fetch(url, {\n    method,\n    headers: {\n        ...headersNew,\n        ...headers\n    },\n    ...options\n  })\n    .then(response => {\n      return response.json();\n    })\n    .then(res => {\n      overTime(res);\n      const newResult = beforeGlobalResponse && beforeGlobalResponse(res);\n      return newResult || res;\n    })\n    .catch(err => {\n      console.error(err);\n      return Promise.resolve();\n    });\n};\n\n// 数据请求，全局配置\nData.setting = ({ beforeResponse, onComplete, onErrorResponse }) => {\n  if (beforeResponse && beforeResponse.apply) {\n    beforeGlobalResponse = beforeResponse;\n  }\n\n  if (onComplete && onComplete.apply) {\n    onGlobalComplete = onComplete;\n  }\n\n  if (onErrorResponse && onErrorResponse.apply) {\n    onGlobalErrorHandler = onErrorResponse;\n  }\n};\n\n// get 请求\nData.get = ({ method, body, ...options }) => {\n  // 把body的参数拼接到url中，并把body参数去掉\n  if (_.isPlainObject(body)) {\n    let url = options.url;\n\n    if (url.indexOf('?') === -1) {\n      url += '?';\n    }\n\n    for (let key in body) {\n      url += `${key}=${body[key]}&`;\n    }\n\n    options.url = url.substring(0, url.length - 1);\n  }\n\n  return Data({\n    method: 'get',\n    ...options\n  });\n};\n\n// post 请求\nData.post = ({ method, params, body, ...options }) => {\n  if (_.isPlainObject(params)) {\n    params = JSON.stringify(params);\n  }\n\n  if (body || params) {\n    options.body = body || params;\n  }\n\n  return Data({\n    method: 'post',\n    ...options\n  });\n};\n\n// put 请求\nData.put = ({ method, ...options }) => {\n  return Data({\n    method: 'put',\n    ...options\n  });\n};\n\n// delete 请求\nData.delete = ({ method, ...options }) => {\n  return Data({\n    method: 'delete',\n    ...options\n  });\n};\n\nData.jsonp = options => {\n  let headers = {};\n  const params = {\n    method: 'GET',\n    headers: {\n      ...headers\n    }\n  };\n\n  let getQuery = '?';\n  let getUrl = '';\n  if (options.query) {\n    for (let name in options.query) {\n      getQuery = `${getQuery}${name}=${options.query[name]}&`;\n    }\n  }\n  getUrl =\n    options.url +\n    (options.query ? getQuery.substring(0, getQuery.length - 1) : '');\n\n  return fetchJSON(getUrl, params);\n};\n\nfunction fetchJSON(url, params) {\n  params = {\n    ...params\n  };\n  return fetchJsonp(url, params);\n}\n\nmodule.exports = Data;\n"]},"metadata":{},"sourceType":"module"}