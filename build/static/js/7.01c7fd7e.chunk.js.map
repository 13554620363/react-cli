{"version":3,"sources":["common/actions/corrceting.js","common/pages/index.js"],"names":["getQuesList","data","dispatch","type","actionTypes","payload","getQuesListStart","axios","get","then","getQuesListSuccess","CommonIndex","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currIndex","visible","headerName","actions","res","console","log","_this2","react_default","a","createElement","onClick","handleClick","spin","spinning","questionInfoList","loading","JSON","stringify","Component","connect","Test","bindActionCreators"],"mappings":"gPAGaA,EAAc,SAACC,GAAD,OAAQ,SAAAC,GAEjC,OADAA,EAOF,SAA0BD,GACxB,MAAO,CACLE,KAAMC,IACNC,QAASJ,GAVFK,CAAiBL,IACnBM,IAAMC,IAAI,uBAAuBC,KAAK,SAAAR,GAEzC,OADAC,EAWN,SAA4BD,GAC1B,MAAO,CACLE,KAAMC,IACNC,QAASJ,GAdES,CAAmBT,IACrBA,kCCAPU,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CACXC,UAAW,GACXC,SAAS,EACTC,WAAY,0BALGV,6EASjBG,KAAKJ,MAAMY,QAAQxB,0DAGnBgB,KAAKJ,MAAMY,QAAQxB,cAAcS,KAAK,SAAAgB,GACpCC,QAAQC,IAAIF,sCAGP,IAAAG,EAAAZ,KACP,OACEa,EAAAC,EAAAC,cAAA,OAAKC,QAAS,kBAAIJ,EAAKK,gBACpBjB,KAAKI,MAAMG,WACZM,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAMC,SAAUnB,KAAKJ,MAAMwB,iBAAiBC,UAC3CC,KAAKC,UAAUvB,KAAKJ,MAAMwB,0BAtBTI,aA2BXC,sBACb,SAAArB,GACE,MAAO,CAAEgB,iBAAkBhB,EAAMsB,OAEnC,SAAAxC,GACE,MAAO,CAAEsB,QAASmB,YAAmBnB,EAAStB,KALnCuC,CAOb9B","file":"static/js/7.01c7fd7e.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport * as actionTypes from '../constants/corrceting';\r\n\r\nexport const getQuesList = (data)=>dispatch => {\r\n  dispatch(getQuesListStart(data));\r\n  return axios.get('/api/auction/banner').then(data => {\r\n      dispatch(getQuesListSuccess(data));\r\n      return data\r\n    });\r\n};\r\n\r\nfunction getQuesListStart(data) {\r\n  return {\r\n    type: actionTypes.GET_QUES_LIST_START,\r\n    payload: data\r\n  };\r\n}\r\nfunction getQuesListSuccess(data) {\r\n  return {\r\n    type: actionTypes.GET_QUES_LIST_SUCCESS,\r\n    payload: data\r\n  };\r\n}\r\n\r\nfunction getQuesListFail(data) {\r\n  return {\r\n    type: actionTypes.GET_QUES_LIST_FAIL,\r\n    payload: data\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\nimport * as actions from '../actions/corrceting';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Spin } from 'antd';\r\n\r\n\r\nclass CommonIndex extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currIndex: '',\r\n      visible: false,\r\n      headerName: '练习1111111111'\r\n    };\r\n  }\r\n  handleClick() {\r\n    this.props.actions.getQuesList()\r\n  }\r\n  componentDidMount() {\r\n    this.props.actions.getQuesList().then(res => {\r\n      console.log(res)\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div onClick={()=>this.handleClick()}>\r\n        {this.state.headerName}\r\n        <Spin spinning={this.props.questionInfoList.loading} />\r\n        {JSON.stringify(this.props.questionInfoList)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  state => {\r\n    return { questionInfoList: state.Test };\r\n  },\r\n  dispatch => {\r\n    return { actions: bindActionCreators(actions, dispatch) };\r\n  }\r\n)(CommonIndex);"],"sourceRoot":""}